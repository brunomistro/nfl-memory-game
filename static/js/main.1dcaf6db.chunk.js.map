{"version":3,"sources":["components/SingleCard.js","App.js","index.js"],"names":["SingleCard","card","handleChoice","flipped","disabled","className","src","alt","onClick","nflImages","matched","App","useState","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setDisabled","shuffleCards","shuffledCards","sort","Math","random","map","id","resetTurn","prevTurns","useEffect","prevCards","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAEe,SAASA,EAAT,GAA8D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,SAQhE,OACC,qBAAKC,UAAU,OAAf,SACC,sBAAKA,UAAWF,EAAU,UAAY,GAAtC,UACC,qBAAKE,UAAU,QAAQC,IAAKL,EAAKK,IAAKC,IAAI,eAC1C,qBACCF,UAAU,OACVC,IAAI,gBACJC,IAAI,aACJC,QAdgB,WACdJ,GACJF,EAAaD,WCFhB,IAAMQ,EAAY,CACjB,CAAE,IAAO,gBAAiBC,SAAS,GACnC,CAAE,IAAO,gBAAiBA,SAAS,GACnC,CAAE,IAAO,eAAgBA,SAAS,GAClC,CAAE,IAAO,gBAAiBA,SAAS,GACnC,CAAE,IAAO,gBAAiBA,SAAS,GACnC,CAAE,IAAO,gBAAiBA,SAAS,IAGrB,SAASC,IACvB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCJ,mBAAS,MAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAkCN,mBAAS,MAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAgCR,oBAAS,GAAzC,mBAAOR,EAAP,KAAiBiB,EAAjB,KAGMC,EAAe,WACpB,IAAMC,EAAgB,UAAId,EAAcA,GACtCe,MAAK,kBAAMC,KAAKC,SAAW,MAC3BC,KAAI,SAAC1B,GAAD,mBAAC,eAAcA,GAAf,IAAqB2B,GAAIH,KAAKC,cAEpCR,EAAa,MACbE,EAAa,MACbN,EAASS,GACTP,EAAS,IAIJd,EAAe,SAACD,GACrBgB,EAAYG,EAAanB,GAAQiB,EAAajB,IAIzC4B,EAAY,WACjBX,EAAa,MACbE,EAAa,MACbJ,GAAS,SAAAc,GAAS,OAAIA,EAAY,KAClCT,GAAY,IAyBZ,OArBDU,qBAAU,WACLd,GAAaE,IAChBE,GAAY,GACRJ,EAAUX,MAAQa,EAAUb,KAC/BQ,GAAS,SAAAkB,GACR,OAAOA,EAAUL,KAAI,SAAA1B,GACpB,OAAIA,EAAKK,MAAQW,EAAUX,IACnB,2BAAIL,GAAX,IAAiBS,SAAS,IACXT,QAGlB4B,KACQI,YAAW,kBAAMJ,MAAa,QAEtC,CAACZ,EAAWE,IAGfY,qBAAU,WACTT,MACE,IAGA,sBAAKjB,UAAU,MAAf,UACE,iDACH,wBAAQG,QAASc,EAAjB,sBAEA,qBAAKjB,UAAU,YAAf,SACEQ,EAAMc,KAAI,SAAA1B,GAAI,OACd,cAAC,EAAD,CAECA,KAAMA,EACNC,aAAcA,EACdC,QAASF,IAASgB,GAAahB,IAASkB,GAAalB,EAAKS,QAC1DN,SAAUA,GAJLH,EAAK2B,SAQb,wCAAWb,QC9EdmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1dcaf6db.chunk.js","sourcesContent":["import './SingleCard.css';\r\n\r\nexport default function SingleCard({card, handleChoice, flipped, disabled}) {\r\n\r\n\tconst handleClick = () => {\r\n\t\tif (!disabled) {\r\n\t\t\thandleChoice(card);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"card\">\r\n\t\t\t<div className={flipped ? \"flipped\" : \"\"}>\r\n\t\t\t\t<img className=\"front\" src={card.src} alt=\"card front\" />\r\n\t\t\t\t<img \r\n\t\t\t\t\tclassName=\"back\" \r\n\t\t\t\t\tsrc=\"./img/NFL.png\" \r\n\t\t\t\t\talt=\"card cover\" \r\n\t\t\t\t\tonClick={handleClick} \r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport SingleCard from './components/SingleCard';\r\n\r\nconst nflImages = [\r\n\t{ \"src\": \"./img/BIL.png\", matched: false},\r\n\t{ \"src\": \"./img/ATL.png\", matched: false},\r\n\t{ \"src\": \"./img/GB.png\", matched: false },\r\n\t{ \"src\": \"./img/MIA.png\", matched: false },\r\n\t{ \"src\": \"./img/SEA.png\", matched: false },\r\n\t{ \"src\": \"./img/TEN.png\", matched: false },\r\n]\r\n\r\nexport default function App() {\r\n\tconst [cards, setCards] = useState([]);\r\n\tconst [turns, setTurns] = useState(0);\r\n\tconst [choiceOne, setChoiceOne] = useState(null);\r\n\tconst [choiceTwo, setChoiceTwo] = useState(null);\r\n\tconst [disabled, setDisabled] = useState(false);\r\n\r\n\t//shuffle cards\r\n\tconst shuffleCards = () => {\r\n\t\tconst shuffledCards = [...nflImages, ...nflImages]\r\n\t\t\t.sort(() => Math.random() - 0.5)\r\n\t\t\t.map((card) => ({...card, id: Math.random()}));\r\n\r\n\t\tsetChoiceOne(null);\r\n\t\tsetChoiceTwo(null);\r\n\t\tsetCards(shuffledCards);\r\n\t\tsetTurns(0);\r\n\t}\r\n\r\n\t//handle choice\r\n\tconst handleChoice = (card) => {\r\n\t\tchoiceOne ? setChoiceTwo(card) : setChoiceOne(card)\r\n\t}\r\n\r\n\t//reset choices and add turn count\r\n\tconst resetTurn = () => {\r\n\t\tsetChoiceOne(null);\r\n\t\tsetChoiceTwo(null);\r\n\t\tsetTurns(prevTurns => prevTurns + 1);\r\n\t\tsetDisabled(false);\r\n\t}\r\n\r\n\t//compare 2 cards selected\r\n\tuseEffect(() => {\r\n\t\tif (choiceOne && choiceTwo) {\r\n\t\t\tsetDisabled(true);\r\n\t\t\tif (choiceOne.src === choiceTwo.src) {\r\n\t\t\t\tsetCards(prevCards => {\r\n\t\t\t\t\treturn prevCards.map(card => {\r\n\t\t\t\t\t\tif (card.src === choiceOne.src) {\r\n\t\t\t\t\t\t\treturn {...card, matched: true}\r\n\t\t\t\t\t\t} else { return card }\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t\tresetTurn();\r\n\t\t\t} else { setTimeout(() => resetTurn(), 1000); }\r\n\t\t}\r\n\t}, [choiceOne, choiceTwo]);\r\n\r\n\t//start an inital game\r\n\tuseEffect(() => {\r\n\t\tshuffleCards()\r\n\t}, [])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>NFL Memory Game</h1>\r\n\t\t\t<button onClick={shuffleCards}>New Game</button>\r\n\r\n\t\t\t<div className=\"card-grid\">\r\n\t\t\t\t{cards.map(card => (\r\n\t\t\t\t\t<SingleCard  \r\n\t\t\t\t\t\tkey={card.id} \r\n\t\t\t\t\t\tcard={card} \r\n\t\t\t\t\t\thandleChoice={handleChoice}\r\n\t\t\t\t\t\tflipped={card === choiceOne || card === choiceTwo || card.matched}\r\n\t\t\t\t\t\tdisabled={disabled}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t<p>Turns: {turns}</p>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}